(name 'ArbitraryPrecisionFloatTests-je.24' message 'possible fix for failing test' id 'f930f66c-3807-46b4-8892-29fff65c0867' date '9 May 2016' time '4:43:30.857028 pm' author 'je' ancestors ((name 'ArbitraryPrecisionFloatTests-je.23' message 'fixes test' id '3aa5210b-c187-46bf-9068-06fd33b91aa7' date '9 May 2016' time '4:24:25.411367 pm' author 'je' ancestors ((name 'ArbitraryPrecisionFloatTests-je.22' message 'ArbitraryPrecisionFloatTests from SergeStinckwich' id '9a6d694c-ce97-45ef-a684-e4c7f9a6d806' date '9 May 2016' time '3:16:43.912058 pm' author 'je' ancestors ((name 'ArbitraryPrecisionFloatTests-SergeStinckwich.21' message '1 test that fails due to Float' id '9f6d9d49-6e3a-4140-85d4-2eb885e46e6c' date '19 July 2015' time '11:11:47.144911 pm' author 'SergeStinckwich' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.20' message 'Provide a test for raisedToInteger:' id '22b353e2-8694-475d-a99a-9c20d637baf0' date '7 February 2015' time '2:50:09.436 am' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.19' message 'Refactor the double-precision tests in order to avoid the double-rounding problem' id '20c3c065-5734-454d-afad-3caac33e89d9' date '7 February 2015' time '2:48:57.491 am' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.18' message 'Test reciprocal a bit more thoroughly.' id 'eb5e84e9-909b-1d4d-ab3a-e242a9b1ae4f' date '18 July 2014' time '1:30:24.377 pm' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.17' message 'Test equality vs other classes.Test that readFrom:numBits: can reconstruct unchanged from printString (storeString is just too easy).' id '774cad73-db59-4bb1-a0f4-93d3bbf2dd5e' date '19 March 2014' time '1:16:44.522 am' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.16' message 'Add two tests for printing/evaluating and asMinimalDecimalFractionThose tests scan all half floating point finite values, see https://en.wikipedia.org/wiki/Half-precision_floating-point_format' id '582a3de5-c1f5-4ac6-9253-84de7e865f62' date '26 July 2013' time '11:34:35.431 pm' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.15' message 'Add more tests for coercion, conversion, and expected DomainError.' id '4b74773b-d001-4213-ba49-c833728938b1' date '3 March 2012' time '8:48:38.796 pm' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.14' message 'Add test for sincos and complete arithmetic tests with other number classes' id '224ee513-7a85-d14c-8f88-27a68d41b630' date '27 September 2011' time '8:22:40.291 pm' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.13' message 'Augment the timeouts a bit, this is necessary for non COG VM or old machines.The timeout should better be relative to an average performance index - an absolute timeout does not mean that much, wasn''t a Palo Alto machine used as benchmark unit?' id '71335b4e-c0b4-401a-a6e4-748a1136bf6d' date '30 August 2011' time '3:14:23.804 am' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.12' message 'After thoughts, use lowercase h in sinh cosh tanh arSinh arCosh arTanh' id 'c1e4593f-c421-46ef-92ad-6849badbfd1a' date '23 April 2011' time '1:03:33.928 am' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.11' message 'Use ISO 31-11 compliant names for inverse hyperbolic functions.Use camel case for hyperbolic and inverse hyperbolic functions.' id '62e473b4-0629-47f1-b7ab-1e88a45e778a' date '22 April 2011' time '1:16:51.16 am' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.10' message 'Add tests for trigonometry on very large numbers' id '26b65c0e-10db-40ee-98dd-285213ebd010' date '27 December 2010' time '7:43:32.683 pm' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.9' message 'Test inverse trigonometric functions.More tests for sqrt.' id 'b05fd50a-f39b-754b-a43e-647a20c63e92' date '14 November 2010' time '2:08:44.438 pm' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.8' message 'Refactored to be more easily portable on VW & Dolphin' id '8304747e-299d-7540-956d-d3ebf11a2ecc' date '13 November 2010' time '9:23:11.068 pm' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.7' message 'Implement tests for hyperbolic functions.Factor test methods and provides more stringent tests for functions.' id '5412c7f2-f777-1340-b6ae-edfdc9d54cd4' date '13 November 2010' time '4:01:20.372 pm' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.6' message 'Test arcTan:' id 'de849a3f-2522-074d-a11c-dfe5972d0f30' date '12 November 2010' time '10:28:27.646 pm' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.5' message 'Test inverse trigonometric functions' id 'e4d79098-28f6-7c40-a2fb-db0035524cbd' date '12 November 2010' time '3:38:50.615 pm' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.4' message 'Test sin/cos asFloat ulp stability when precision is increased.Account for Float sin error up to 5*1.0 ulp on win32 cog.' id '1952dcd9-cdae-bb4f-bc08-ce144ddf1ec9' date '10 November 2010' time '10:34:40.602 pm' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.3' message 'Account for timeouts and fuzzy ix86 #ln ulp to let the tests pass' id '9be0a4c5-a85f-494d-b4fc-09ff649a96a9' date '5 November 2010' time '9:56:05.162 pm' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.2' message 'Provides tests for #sin and #cos.Note that x86 cos is up to 5 ulp off...' id '0b1873e6-bf39-4e29-ba67-a12b7c304f4a' date '5 November 2010' time '9:45:21.5 pm' author 'nice' ancestors ((name 'ArbitraryPrecisionFloatTests-nice.1' message 'Separate tests in another package' id 'bb798e31-1d7b-44e0-840e-523e43b2a831' date '1 October 2010' time '1:39:43.988 am' author 'nice' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())